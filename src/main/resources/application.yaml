server:
  port: 8080

logging:
  level:
    root: INFO
    org.flywaydb.core.Flyway: DEBUG

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info

springdoc:
  packagesToScan: uk.gov.hmcts.legacy.web.controllers

env:
  dbhost: ${POSTGRES_HOST:postgresql-11-staging.cutundmgf1ze.eu-west-2.rds.amazonaws.com}
  dbport: ${POSTGRES_PORT:5432}
  dbname: ${POSTGRES_DATABASE:postgres}
  dbuser: ${POSTGRES_USER:dbadmin}
  dbpass: ${POSTGRES_PASSWORD:}

#If you use a database then uncomment below lines and update db properties accordingly
spring:
  config:
    import: "optional:configtree:/mnt/secrets/lgy-iac/"
  application:
    name: lgy-iac-web
  datasource:
#    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${env.dbhost}:${env.dbport}/${env.dbname}?user=${env.dbuser}&password=${env.dbpass}
#    username: ${DB_USER_NAME}
#    password: ${DB_PASSWORD}
#    properties:
#      charSet: UTF-8
#    hikari:
#      minimumIdle: 2
#      maximumPoolSize: 10
#      idleTimeout: 10000
#      poolName: {to-be-defined}HikariCP
#      maxLifetime: 7200000
#      connectionTimeout: 30000
#  jpa:
#    properties:
#      hibernate:
#        jdbc:
#          lob:
#            # silence the 'wall-of-text' - unnecessary exception throw about blob types
#            non_contextual_creation: true

dbMigration:
  # When true, the app will run DB migration on startup.
  # Otherwise, it will just check if all migrations have been applied (and fail to start if not).
  runOnStartup: ${RUN_DB_MIGRATION_ON_STARTUP:false}
